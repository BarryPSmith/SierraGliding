<?xml version="1.0" encoding="utf-8"?>
<!--
 *
 * testef6.NetStandard21.csproj -
 *
 * Written by Joe Mistachkin.
 * Released to the public domain, use at your own risk!
 *
-->
<Project ToolsVersion="16.0">
  <!--
  ******************************************************************************
  **                     Import .NET Core SDK Properties                      **
  ******************************************************************************
  -->

  <!--
      WARNING: This project cannot use the recommended pattern of having the
               "Project" element simply include the "Sdk" attribute, due to
               the "BuildDependsOn" property not being honored, see:

               https://github.com/Microsoft/msbuild/issues/1680

               Instead, the .NET Core SDK properties file is imported here
               and the corresponding targets file is imported right before
               resetting the "BuildDependsOn" property to include targets
               necessary for this project.
  -->
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <!--
  ******************************************************************************
  **                       Project Specific Properties                        **
  ******************************************************************************
  -->

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2975AE0A-F159-4834-A837-5242C6691886}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>testef6</RootNamespace>
    <AssemblyName>testef6</AssemblyName>
    <SQLiteNetDir>$(MSBuildProjectDirectory)\..</SQLiteNetDir>
    <IsDotNetStandard>true</IsDotNetStandard>
    <ConfigurationYear>NetStandard21</ConfigurationYear>
    <UseEntityFramework6>true</UseEntityFramework6>
  </PropertyGroup>

  <!--
  ******************************************************************************
  **             Project / .NET Standard 2.1 Specific Properties              **
  ******************************************************************************
  -->

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <Deterministic>False</Deterministic>
    <EnableDefaultItems>false</EnableDefaultItems>
  </PropertyGroup>

  <!--
  ******************************************************************************
  **                    .NET Standard 2.1 Specific Targets                    **
  ******************************************************************************
  -->

  <Target Name="CopyToNetStandard21"
          Condition="'$(CopyToNetStandard21)' != 'false' And
                     '$(OutputPath)' != '' And
                     HasTrailingSlash('$(OutputPath)') And
                     Exists('$(OutputPath)')"
          Inputs="$(TargetPath)"
          Outputs="$(TargetPath).CopyToNetStandard21.done">
    <CreateItem Include="$(OutputPath)**">
      <Output ItemName="OutputPathFiles" TaskParameter="Include" />
    </CreateItem>

    <Copy SourceFiles="@(OutputPathFiles)"
          DestinationFiles="@(OutputPathFiles -> '$(OutputPath)..\netstandard2.1\%(RecursiveDir)%(Filename)%(Extension)')" />

    <Touch AlwaysCreate="true"
           Files="$(TargetPath).CopyToNetStandard21.done" />
  </Target>

  <!--
  ******************************************************************************
  **    .NET Standard 2.1 Specific Strong Name Signing Property Overrides     **
  ******************************************************************************
  -->

  <PropertyGroup>
    <!--
        NOTE: Apparently, the .NET Core build system sets the SignAssembly
              property to false; therefore, reset it to true.  Also, delay
              signing is currently non-functional due to the inability to
              run the strong name signing tool (sn.exe).  It behaves badly
              when run against a .NET Core assembly.
    -->
    <SignAssembly>true</SignAssembly>
    <DelaySign>false</DelaySign>

    <!--
        TODO: Why is this needed?  It seems that public signing is quite
              similar to delay signing.  Why is this necessary when not
              running on Windows?
    -->
    <PublicSign Condition="'$(OS)' != 'Windows_NT'">true</PublicSign>
  </PropertyGroup>

  <!--
  ******************************************************************************
  **                     Import Project Default Settings                      **
  ******************************************************************************
  -->

  <Import Project="$(SQLiteNetDir)\Targets\SQLite.NET.Platform.Settings.targets" />
  <Import Project="$(SQLiteNetDir)\Targets\SQLite.NET.Settings.targets" />

  <!--
  ******************************************************************************
  **                       Import Project Build Targets                       **
  ******************************************************************************
  -->

  <Import Project="$(SQLiteNetDir)\Targets\SQLite.NET.targets" />

  <!--
  ******************************************************************************
  **               Convert Project Settings To MSBuild Settings               **
  ******************************************************************************
  -->

  <PropertyGroup Condition="'$(BinaryOutputPath)' != ''">
    <OutputPath>$(BinaryOutputPath)</OutputPath>
  </PropertyGroup>

  <!--
  ******************************************************************************
  **                Project Configuration Specific Properties                 **
  ******************************************************************************
  -->

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>

  <!--
  ******************************************************************************
  -->

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>

  <!--
  ******************************************************************************
  **                Project Source Code Files (Unconditional)                 **
  ******************************************************************************
  -->

  <ItemGroup>
    <Compile Include="NorthwindModel.EF6.NetStandard21.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>NorthwindModel.EF6.NetStandard21.edmx</DependentUpon>
    </Compile>
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>

  <!--
  ******************************************************************************
  **                     Project Miscellaneous Data Files                     **
  ******************************************************************************
  -->

  <ItemGroup>
    <None Include="NetStandard21\EF6\App.config" />
    <None Include="northwindEF.db">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!--
  ******************************************************************************
  **                          Entity Framework Files                          **
  ******************************************************************************
  -->

  <ItemGroup>
    <EntityDeploy Include="NorthwindModel.EF6.NetStandard21.edmx">
      <Generator>EntityModelCodeGenerator</Generator>
      <LastGenOutput>NorthwindModel.EF6.NetStandard21.Designer.cs</LastGenOutput>
    </EntityDeploy>
  </ItemGroup>

  <!--
  ******************************************************************************
  **                        Library Project References                        **
  ******************************************************************************
  -->

  <ItemGroup>
    <ProjectReference Include="..\System.Data.SQLite.Linq\System.Data.SQLite.EF6.NetStandard21.csproj">
      <Project>{5C2DC333-3ADB-4AA7-BE56-0C675C8EE32E}</Project>
      <Name>System.Data.SQLite.EF6.NetStandard21</Name>
      <Private>False</Private>
    </ProjectReference>
  </ItemGroup>

  <!--
  ******************************************************************************
  **                      .NET Core Assembly References                       **
  ******************************************************************************
  -->

  <ItemGroup>
    <PackageReference Include="EntityFramework" Version="6.3.0" />
  </ItemGroup>

  <!--
  ******************************************************************************
  **                       Import .NET Core SDK Targets                       **
  ******************************************************************************
  -->

  <!--
      WARNING: This project cannot use the recommended pattern of having the
               "Project" element simply include the "Sdk" attribute, see the
               comment at the top of this file for more information.
  -->
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <!--
  ******************************************************************************
  **                           Import Build Targets                           **
  ******************************************************************************
  -->

  <Import Project="$(SQLiteNetDir)\System.Data.SQLite\Targets\System.Data.SQLite.Properties.targets" />

  <!--
  ******************************************************************************
  **                  Add Targets To BuildDependsOn Property                  **
  ******************************************************************************
  -->

  <PropertyGroup>
    <BuildDependsOn>
      DetectBuildTool;
      DetectOperatingSystem;
      $(BuildDependsOn);
      CopyToNetStandard21;
    </BuildDependsOn>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>